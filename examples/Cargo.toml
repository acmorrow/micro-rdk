[package]
name = "examples"
authors.workspace = true
description.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
rust-version.workspace = true
version.workspace = true

build = "build.rs"
publish = false

[features]
qemu = []

[target.'cfg(not(target_os = "espidf"))'.dependencies]
micro-rdk = { workspace = true, features = ["native"], default-features = false }
env_logger.workspace = true
local-ip-address.workspace = true


[target.'cfg(target_os="espidf")'.dependencies]
embedded-svc.workspace = true
embedded-hal.workspace = true
micro-rdk = { workspace = true, features = ["esp32"] }
async-channel.workspace = true
smol.workspace = true
futures-lite.workspace = true
reqwless.workspace = true


[dependencies]
anyhow = { workspace = true, features = ["backtrace"] }
serde.workspace = true
serde_json.workspace = true
thiserror.workspace = true
log.workspace = true


[build-dependencies]
anyhow.workspace = true
const-gen.workspace = true
embuild.workspace = true
gethostname.workspace = true
local-ip-address.workspace = true
prost-types.workspace = true
serde.workspace = true
serde_json.workspace = true
tokio = { workspace = true, features = ["full"] }
viam.workspace = true
viam-rust-utils.workspace = true
rcgen.workspace = true
ring.workspace = true
der.workspace = true

[[bin]]
name = "native-server"
path = "native/native-server.rs"

[[bin]]
name = "esp32-server"
path = "esp32/esp32-server.rs"

[[bin]]
name = "esp32-server-with-cred"
path = "esp32-with-cred/esp32-server-with-cred.rs"

[package.metadata.esp-idf-sys]
esp_idf_tools_install_dir = "global"
esp_idf_sdkconfig_defaults = ["examples/sdkconfig.defaults", "examples/sdkconfig.defaults.esp32"]
